<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="snmp_defaultproperties"/>

  <function name="snmp_defaultproperties">

    <sequence>

      <block name="'snmp_defaultproperties'">

        <sequence>

          <!--- Test Suite information
            #@TestSuiteName    SNMP Connection Handler default properties
            #@TestSuitePurpose Check SNMP Connection Handler default properties.
            #@TestSuiteGroup   SNMP Connection Handler default properties
            #@TestScript       snmp_defaultproperties.xml
          -->
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group'] = 'snmp'
            CurrentTestPath['suite'] = STAXCurrentBlock
          </script>

          <call function="'testSuite_Preamble'"/>
          
          <!--- Construct a table containing the expected properties -->          
          <script>
            EXPECTED_PROPERTIES = {}
            EXPECTED_PROPERTIES['allowed-client'] = ''
            EXPECTED_PROPERTIES['allowed-manager'] = '*'
            EXPECTED_PROPERTIES['allowed-user'] = '*'
            EXPECTED_PROPERTIES['community'] = 'OpenDS'
            EXPECTED_PROPERTIES['denied-client'] = ''
            EXPECTED_PROPERTIES['enabled'] = 'false'
            EXPECTED_PROPERTIES['listen-address'] = '0.0.0.0'
            EXPECTED_PROPERTIES['listen-port'] = '161'
            EXPECTED_PROPERTIES['opendmk-jarfile'] = ''
            EXPECTED_PROPERTIES['registered-mbean'] = 'false'
            file = 'config/snmp/security/opends-snmp.security'
            EXPECTED_PROPERTIES['security-agent-file'] = '%s' % file
            EXPECTED_PROPERTIES['security-level'] = 'authnopriv'
            EXPECTED_PROPERTIES['trap-port'] = '162'
            EXPECTED_PROPERTIES['traps-community'] = 'OpenDS'
            EXPECTED_PROPERTIES['traps-destination'] = ''
          </script>

          <!--- Test Case information
            #@TestMarker          SNMP Connection Handler default properties
            #@TestName            snmp_defaultproperties: TODO
            #@TestIssue           none
            #@TestPurpose         TODO.
            #@TestPreamble        none
            #@TestStep            TODO.
            #@TestPostamble       none
            #@TestResult          TODO.
          -->
          <testcase name="getTestCaseName
          ('snmp_defaultproperties: check the default properties')">

            <sequence>

              <call function="'testCase_Preamble'"/>

              <message>
                'snmp_defaultproperties: check the default properties'
              </message>

              <script>
                result = compare_property_table(EXPECTED_PROPERTIES,
                                                DEFAULT_PROPERTIES)
              </script>
              
              <message>
                '%s' % result
              </message>              
              
              <call function="'checktestStringNotPresent'">
                {
                'returnString' : result ,
                'testString'   : 'ERROR'
                }
              </call>
              
              <call function="'testCase_Postamble'"/>

            </sequence>

          </testcase>

          <call function="'testSuite_Postamble'"/>

        </sequence>

      </block>

    </sequence>

  </function>

</stax>
