<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2006-2008 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="last_login"/>

  <function name="last_login">

      <sequence>
        
         <!--- Test Suite information
            #@TestSuiteName       Last Login
            #@TestSuitePurpose    Test Password Policy for Last Login
            #@TestSuiteGroup      Last Login
            #@TestScript          security_last_login.xml
          -->
 
         <!--- Define default value for basedn -->
          <script>
     basedn = 'ou=people,ou=password tests,o=Pwd Policy Tests,dc=example,dc=com'
     basepwp = 'cn=Default Password Policy,cn=Password Policies,cn=config'
     msg1 = 'Security: Last Login:'
     msg2 = 'Long Idle Lockout'
     msg3 = 'Admin Changing Idle Lockout Interval'
     msg4 = 'Password Change Override Step'
     msg5 = 'User Bind Reset Step'
     msg6 = 'User Binding Before Idle Lockout'
     msg7 = 'User Binding After Idle Lockout'
          </script>
        
        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Check for ds-cfg-idle-lockout-interval
            #@TestIssue           none
            #@TestPurpose         Check for ds-cfg-idle-lockout-interval
            #@TestPreamble        none
            #@TestStep            Checking existence of 
                                  ds-cfg-idle-lockout-interval with value set 0
            #@TestPostamble       none
            #@TestResult          Success if compareEntry returns 0
        -->
        
        <testcase name="getTestCaseName('Preamble')">
          <sequence>
            <call function="'testCase_Preamble'"/>          
            <message>
'%s Preamble - Checking existence of ds-cfg-idle-lockout-interval' % msg1
            </message>

            <call function="'compareEntry'">
             { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
               'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
               'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
               'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
               'attrToBeCompared'    : 'ds-cfg-idle-lockout-interval:0 seconds',
               'entryToBeCompared'   : basepwp }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin enable last login attribute only
            #@TestIssue           none
            #@TestPurpose         Admin enable last login attribute only
            #@TestPreamble        none
            #@TestStep            Admin Enable Last Login Attribute Only
                                  modifyPwdPolicy set last-login-time-attribute 
                                  to ds-pwp-last-login-time
            #@TestStep            User Binding With Password returns 0
            #@TestStep            Checking for Absence of Last Login Time
                                  SearchObject attribute ds-pwp-last-login-time 
                                  returns 0 checktestStringNotPresent 
                                  ds-pwp-last-login-time
            #@TestPostamble       none
            #@TestResult          Success if the 3 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Admin Enable Last Login Attr Only')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
               'Security: Last Login: Admin Enable Last Login Attribute Only'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'attributeValue'         : 'ds-pwp-last-login-time' }
            </call>
            
            <message>
               'Security: Last Login: User Binding With Password'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
               'Security: Last Login: Checking for Absence of Last Login Time'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'uid=jreuter,%s' % basedn ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'ds-pwp-last-login-time' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'    : returnString ,
                  'testString'      : 'ds-pwp-last-login-time' }
            </call>
            
            <call function="'testCase_Postamble'"/>
          
          </sequence>
        </testcase>

        <!--- Test Case information
          #@TestMarker          Last Login
          #@TestName            Admin enable last login format only
          #@TestIssue           none
          #@TestPurpose         Admin enable last login format only
          #@TestPreamble        none
          #@TestStep            Admin Disable Last Login Attribute Only set
                                last-login-time-attribute to reset
          #@TestStep            Admin Enable Last Login Format Only set
                                last-login-time-format to EEE, MMM dd, 
                                yyyy HH:mm:ss
          #@TestStep            User Binding With Password returns 0
          #@TestStep            Checking for Absence of Last Login Time
                                SearchObject attribute ds-pwp-last-login-time
                                checktestStringNotPresent ds-pwp-last-login-time
          #@TestPostamble       none
          #@TestResult          Success if the 4 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Admin Enable Last Login Format Only')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
               'Security: Last Login: Admin Disable Last Login Attribute Only'
            </message>
            
            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'modifyType'             : 'reset' }
            </call>
            
            <message>
               'Security: Last Login: Admin Enable Last Login Format Only'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-format' ,
                    'attributeValue'         : 'EEE, MMM dd, yyyy HH:mm:ss' }
            </call>
            
            <message>
               'Security: Last Login: User Binding With Password'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
               'Security: Last Login: Checking for Absence of Last Login Time'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'uid=jreuter,%s' % basedn ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'ds-pwp-last-login-time' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'   : returnString ,
                  'testString'     : 'ds-pwp-last-login-time' }
            </call>
            
            <call function="'testCase_Postamble'"/>
          
          </sequence>
        </testcase>

        <!--- Test Case information
          #@TestMarker        Last Login
          #@TestName          Admin enable both last login attribute and format
          #@TestIssue         none
          #@TestPurpose       Admin enable both last login attribute and format
          #@TestPreamble      none
          #@TestStep          Admin Enable Last Login Attribute And Format
                              set last-login-time-attribute to 
                              ds-pwp-last-login-time
          #@TestStep          User Binding With Password returns 0
          #@TestStep          Check manage-account get-last-login-time
          #@TestStep          Checking for Absence of Last Login Time
                              SearchObject ds-pwp-last-login-time returns 0
                              checktestString ds-pwp-last-login-time
          #@TestPostamble     none
          #@TestResult        Success if the 3 steps are PASS
        -->
        
   <testcase name="getTestCaseName('Admin Enable Last Login Attr And Format')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
           'Security: Last Login: Admin Enable Last Login Attribute And Format'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'attributeValue'         : 'ds-pwp-last-login-time' }
            </call>
            
            <message>
               'Security: Last Login: User Binding With Password'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>
            
            <message>
            '%s Check manage-account get-last-login-time' % msg1
            </message>

            <call function="'manageAccountWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'       : 'get-last-login-time' ,
                'targetDn'         : 'uid=jreuter,%s' % basedn  }
            </call>
            
            <script> 
             returnString = STAXResult[0][1]
            </script>
            
            <call function="'checktestString'">
                { 'returnString'       : returnString ,
                  'expectedString'     : 'Last Login Time:  2' }
            </call>
            
            <message>
               'Security: Last Login: Checking for Absence of Last Login Time'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'uid=jreuter,%s' % basedn ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'ds-pwp-last-login-time' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestString'">
                { 'returnString'       : returnString ,
                  'expectedString'     : 'ds-pwp-last-login-time' }
            </call>
            
            <call function="'testCase_Postamble'"/>
            
          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Long Idle Lockout Interval
            #@TestIssue           none
            #@TestPurpose         Long Idle Lockout Interval
            #@TestPreamble        none
            #@TestStep            Step 1. Check User Bind returns 0
            #@TestStep            Step 2. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 3. User Binding Before Idle Lockout
                                  SearchObject returns 0
            #@TestStep            Step 4. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 5. User Binding After Idle Lockout
                                  SearchObject returns 49
            #@TestPostamble       none
            #@TestResult          Success if the 5 steps are PASS
        -->

        <testcase name="getTestCaseName('Long Idle Lockout')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
              'Security: Last Login: Long Idle Lockout Step 1. Check User Bind'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
'%s Long Idle Lockout Step 2. Admin Changing Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s Long Idle Lockout Step 3. User Binding Before Idle Lockout' % msg1
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
               'Security: Last Login: Long Idle Lockout Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            
            <message>
'%s Long Idle Lockout Step 5. User Binding After Idle Lockout' % msg1
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'destroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base',
                  'expectedRC'       : 49 }
            </call>
            
            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 1
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 1
            #@TestPreamble        none
            #@TestStep            Step 1. set idle-lockout-interval to 0 s
            #@TestStep            Step 2. User Binding SearchObject returns 0
            #@TestStep            Step 3. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 4. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 4 tests are PASS
        -->
        
        <testcase name="getTestCaseName('Reset Idle Lockout')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Reset Idle Lockout Step 1. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 2. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'destroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  

            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'destroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Password Change Override
            #@TestIssue           none
            #@TestPurpose         Password Change Override
            #@TestPreamble        none
            #@TestStep            Step 1. Check User Bind SearchObject returns 0
            #@TestStep            Step 2. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 3. User Binding Before Idle Lockout
                                  SearchObject returns 0
            #@TestStep            Step 4. Check get-seconds-until-idle-lockout
            #@TestStep            Step 5. Sleep sleepForMilliSeconds 30000
            #@TestStep            Step 6. User Changing Password
            #@TestStep            Step 7. Sleep sleepForMilliSeconds to 30000
            #@TestStep            Step 8. User Binding After Idle Lockout
                                  SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 8 steps are PASS
        -->
        
    <testcase name="getTestCaseName('Long Idle Lockout - Pwd Change Override')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s, %s - Password Change Override Step 1. Check User Bind' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
'%s, %s - Password Change Override Step 2. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - %s Step 3. User Binding Before Idle Lockout' % (msg1,msg2,msg4)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'destroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>
            
            <message>
'%s, %s - %s Step 4. Check get-seconds-until-idle-lockout' % (msg1,msg2,msg4)
            </message>

            <call function="'manageAccountWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'       : 'get-seconds-until-idle-lockout' ,
                'targetDn'         : 'uid=jreuter,%s' % basedn  }
            </call>
            
            <script> 
             returnString = STAXResult[0][1]
            </script>
            
            <call function="'checktestString'">
              { 'returnString'       : returnString ,
                'expectedString'     : 'Seconds Until Idle Account Lockout: ' }
            </call>


            <message>
               'Security: Last Login: Long Idle Lockout Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 30000 }
            </call>

            
            <message>
'%s, %s - Password Change Override Step 5. User Changing Password' % (msg1,msg2)
            </message>

            <call function="'ldapPasswordModifyWithScript'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'         : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'dsAuthzID'              : 'dn:uid=jreuter,%s' % basedn ,
                    'dsNewPassword'          : 'newdestroy' }
            </call>
            
            <message>
               'Security: Last Login: Long Idle Lockout Step 6. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 30000 }
            </call>

            <message>
'%s Long Idle Lockout Step 7. User Binding After Idle Lockout' % msg1
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>
        
        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 2
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 2
            #@TestPreamble        none
            #@TestStep            Step 1. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval to 0
            #@TestStep            Step 2. User Binding SearchObject returns 0
            #@TestStep            Step 3. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 4. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 4 steps are PASS
        -->

        <testcase name="getTestCaseName('Reset Idle Lockout 2')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Reset Idle Lockout 2 Step 1. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout 2 Step 2. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  
            <message>
               'Security: Last Login: Reset Idle Lockout 2 Step 3. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
               'Security: Last Login: Reset Idle Lockout 2 Step 4. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            User Bind Reset Last Login Time
            #@TestIssue           none
            #@TestPurpose         User Bind Reset Last Login Time
            #@TestPreamble        none
            #@TestStep            Step 1. Check User Bind SearchObject returns 0
            #@TestStep            Step 2. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 3. User Binding Before Idle Lockout
                                  SearchObject returns 0
            #@TestStep            Step 4. Sleep sleepForMilliSeconds 30000
            #@TestStep            Step 5. User Bind To Reset Last Login Time
                                  SearchObject returns 0
            #@TestStep            Step 6. Sleep sleepForMilliSeconds 30000
            #@TestStep            Step 7. User Binding After Idle Lockout
                                  SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 7 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Long Idle Lockout - User Bind Reset')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Long Idle Lockout - User Bind Reset Step 1. Check User Bind' % msg1
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
'%s, %s - User Bind Reset Step 2. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - %s 3. User Binding Before Idle Lockout' % (msg1,msg2,msg5)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
      'Security: Last Login: Long Idle Lockout - User Bind Reset Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 30000 }
            </call>

            <message>
'%s, %s - %s 5. User Bind To Reset Last Login Time' % (msg1,msg2,msg5)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
      'Security: Last Login: Long Idle Lockout - User Bind Reset Step 6. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 30000 }
            </call>

            <message>
'%s, %s - User Bind Reset Step 7. User Binding After Idle Lockout' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 3
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 3
            #@TestPreamble        none
            #@TestStep            Step 1. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval to 0
            #@TestStep            Step 2. User Binding SearchObject returns 0
            #@TestStep            Step 3. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 4. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 4 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Reset Idle Lockout 3')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Reset Idle Lockout Step 1. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 2. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  
            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Long Idle Lockout Interval
            #@TestIssue           none
            #@TestPurpose         Long Idle Lockout Interval
            #@TestPreamble        none
            #@TestStep            Step 1. Disable Last Login set 
                                  last-login-time-attribute to reset
            #@TestStep            Step 2. Check User Bind SearchObject returns 0
            #@TestStep            Step 3. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 4. User Binding SearchObject returns 49
            #@TestPostamble       none
            #@TestResult          Success if the 4 steps are PASS
        -->        
        
    <testcase name="getTestCaseName('Long Idle Lockout - Disabled Last Login')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s, %s - Disabled Last Login Step 1. Disable Last Login' % (msg1,msg2)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'modifyType'             : 'reset' }
            </call>
            
            <message>
'%s, %s - Disabled Last Login Step 2. Check User Bind' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
'%s, %s - Disabled Last Login Step 3. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - Disabled Last Login  Step 4. User Binding' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' ,
                'expectedRC'       : 49 }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
          #@TestMarker       Last Login
          #@TestName         Admin Reset Idle Lockout Interval 4
          #@TestIssue        none
          #@TestPurpose      Admin Reset Idle Lockout Interval 4
          #@TestPreamble     none
          #@TestStep         Step 1. Enable Last Login Attribute set
                             last-login-time-attribute to ds-pwp-last-login-time
          #@TestStep         Step 2. Admin Resetting Idle Lockout Interval
                             set idllockout-interval to 0 s
          #@TestStep         Step 3. User Binding SearchObject returns 0
          #@TestStep         Step 4. Sleep sleepForMilliSeconds 60000
          #@TestStep         Step 5. User Binding SearchObject returns 0
          #@TestPostamble    none
          #@TestResult       Success if the 5 steps are PASS
        -->

        <testcase name="getTestCaseName('Reset Idle Lockout 4')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'Security: Last Login: Reset Idle Lockout Step 1. Enable Last Login - Attribute'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'attributeValue'         : 'ds-pwp-last-login-time' }
            </call>
            
            <message>
'%s Reset Idle Lockout Step 2. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  
            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
               'Security: Last Login: Reset Idle Lockout Step 5. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
          #@TestMarker          Last Login
          #@TestName            Long Idle Lockout Interval Disabled Last Login 2
          #@TestIssue           none
          #@TestPurpose         Long Idle Lockout Interval Disabled Last Login 2
          #@TestPreamble        none
          #@TestStep            Step 1. Disable Last Login set
                                last-login-time-format to reset
          #@TestStep            Step 2. Check User Bind SearchObject returns 0
          #@TestStep            Step 3. Admin Changing Idle Lockout Interval
                                set idle-lockout-interval to 50 s
          #@TestStep            Step 4. User Binding SearchObject returns 49
          #@TestPostamble       none
          #@TestResult          Success if the 4 steps are PASS
        -->
        
  <testcase name="getTestCaseName('Long Idle Lockout - Disabled Last Login 2')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s, %s - Disabled Last Login 2 Step 1. Disable Last Login' % (msg1,msg2)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-format' ,
                    'modifyType'             : 'reset' }
            </call>
            
            <message>
'%s, %s - Disabled Last Login 2 Step 2. Check User Bind' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
'%s, %s - Disabled Last Login 2 Step 3. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - Disabled Last Login  2 Step 4. User Binding' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' ,
                'expectedRC'       : 49 }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 5
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 5
            #@TestPreamble        none
            #@TestStep            Step 1. Enable Last Login Attribute set
                                  last-login-time-format to EEE, MMM dd, 
                                  yyyy HH:mm:ss
            #@TestStep            Step 2. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval to 0 s
            #@TestStep            Step 3. User Binding SearchObject returns 0
            #@TestStep            Step 4. Sleep sleepForMilliSeconds to 60000
            #@TestStep            Step 5. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 5 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Reset Idle Lockout 5')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'Security: Last Login: Reset Idle Lockout Step 1. Enable Last Login - Attribute'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-format' ,
                    'attributeValue'         : 'EEE, MMM dd, yyyy HH:mm:ss' }
            </call>
            
            <message>
'%s Reset Idle Lockout Step 2. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  

            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
               'Security: Last Login: Reset Idle Lockout Step 5. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Long Idle Lockout Interval - Repeat
            #@TestIssue           none
            #@TestPurpose         Long Idle Lockout Interval - Repeat
            #@TestPreamble        none
            #@TestStep            Step 1. Check User Bind SearchObject returns 0
            #@TestStep            Step 2. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 3. User Binding Before Idle Lockout
                                  SearchObject returns 0
            #@TestStep            Step 4. Sleep sleepForMilliSeconds to 60000
            #@TestStep            Step 5. User Binding After Idle Lockout
                                  SearchObject returns 49
            #@TestPostamble       none
            #@TestResult          Success if the 5 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Long Idle Lockout - Repeat')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
               'Security: Last Login: Long Idle Lockout Step 1. Check User Bind'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>

            <message>
'%s, %s Step 2. Admin Changing Idle Lockout Interval' % (msg1,msg2)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s Step 3. User Binding Before Idle Lockout' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
               'Security: Last Login: Long Idle Lockout Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            
            <message>
'%s, %s Step 5. User Binding After Idle Lockout' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' ,
                  'expectedRC'       : 49 }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 6
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 6
            #@TestPreamble        none
            #@TestStep            Step 1. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval to 0 s
            #@TestStep            Step 2. User Binding SearchObject returns 0
            #@TestStep            Step 3. Sleep sleepForMilliSeconds to 60000
            #@TestStep            Step 4. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 4 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Reset Idle Lockout 6')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Reset Idle Lockout Step 1. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 2. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  

            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'newdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
          #@TestMarker        Last Login
          #@TestName          Long Idle Lockout Interval - Pwd Change Override 2
          #@TestIssue         none
          #@TestPurpose       Long Idle Lockout Interval - Pwd Change Override 2
         SearchObject returns 0
          #@TestPreamble      none
          #@TestStep          Step 1. Check User Bind SearchObject returns 0
          #@TestStep          Step 2. Admin Changing Idle Lockout Interval
                              set idle-lockout-interval to 50 s
          #@TestStep          Step 3. User Binding Before Idle Lockout
                              SearchObject returns 0
          #@TestStep          Step 4. Sleep sleepForMilliSeconds to 60000
          #@TestStep          Step 5. User Changing Password
          #@TestStep          Step 6. User Binding After Idle Lockout
                              SearchObject returns 0
          #@TestPostamble     none
          #@TestResult        Success if the 6 steps are PASS
        -->
        
  <testcase name="getTestCaseName('Long Idle Lockout - Pwd Change Override 2')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s, %s - Pwd Change Override 2 Step 1. Check User Bind' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
'%s, %s - Pwd Change Override 2 Step 2. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - Pwd Change Override 2 Step 3. %s' % (msg1,msg2,msg6)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'newdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
'Security: Last Login: Long Idle Lockout - Pwd Change Override 2 Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            <message>
'%s, %s - Pwd Change Override 2 Step 5. User Changing Password' % (msg1,msg2)
            </message>

            <call function="'ldapPasswordModifyWithScript'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'         : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'dsAuthzID'              : 'dn:uid=jreuter,%s' % basedn ,
                    'dsNewPassword'          : 'anotherdestroy' }
            </call>
            
            <message>
'%s, %s - Pwd Change Override 2 Step 6. %s' % (msg1,msg2,msg7)
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'anotherdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Admin Reset Idle Lockout Interval 7
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval 7
            #@TestPreamble        none
            #@TestStep            Step 1. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval to 0 s
            #@TestStep            Step 2. User Binding SearchObject returns 0
            #@TestStep            Step 3. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 4. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 4 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Reset Idle Lockout 7')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Reset Idle Lockout Step 1. Admin Resetting Idle Lockout Interval' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 2. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'anotherdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  

            <message>
               'Security: Last Login: Reset Idle Lockout Step 3. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            
            <message>
               'Security: Last Login: Reset Idle Lockout Step 4. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'anotherdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Long Idle Lockout - Pwd Change Override 3
            #@TestIssue           none
            #@TestPurpose         Long Idle Lockout - Pwd Change Override 3
            #@TestPreamble        none
            #@TestStep            Step 1. Disable Last Login set
                                  last-login-time-format to reset
            #@TestStep            Step 2. Check User Bind SearchObject returns 0
            #@TestStep            Step 3. Admin Changing Idle Lockout Interval
                                  set idle-lockout-interval to 50 s
            #@TestStep            Step 4. User Binding Before Idle Lockout
                                  SearchObject returns 49
            #@TestStep            Step 5. Admin Changing Password
            #@TestStep            Step 6. User Binding After Admin Pwd Change
                                  SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 6 steps are PASS
        -->
        
 <testcase name="getTestCaseName('Long Idle Lockout - Pwd Change Override 3')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'%s Long Idle Lockout - Pwd Change Override 3 Step 1. Disable Last Login' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-format' ,
                    'modifyType'             : 'reset' }
            </call>
            
            <message>
'%s, %s - Pwd Change Override 3 Step 2. Check User Bind' % (msg1,msg2)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'anotherdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' }
            </call>


            <message>
'%s, %s - Pwd Change Override 3 Step 3. %s' % (msg1,msg2,msg3)
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '50 s' }
            </call>
            
            <message>
'%s, %s - Pwd Change Override 3 Step 4. %s' % (msg1,msg2,msg6)
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                'dsInstancePswd'   : 'anotherdestroy' ,
                'dsBaseDN'         : 'dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'extraParams'      : '-s base' ,
                'expectedRC'       : 49 }
            </call>

            <message>
'%s, %s - Pwd Change Override 3 Step 5. Admin Changing Password' % (msg1,msg2)
            </message>

            <call function="'ldapPasswordModifyWithScript'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'         : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'dsAuthzID'              : 'dn:uid=jreuter,%s' % basedn ,
                    'dsNewPassword'          : 'lastdestroy' }
            </call>
            
            <message>
'%s Pwd Override 3 Step 6. User Binding After Admin Pwd Change' % msg1
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'lastdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>
            
          </sequence>
        </testcase>

        <!--- Test Case information
            #@TestMarker          Last Login
            #@TestName            Postamble Admin Reset Idle Lockout Interval
            #@TestIssue           none
            #@TestPurpose         Admin Reset Idle Lockout Interval
            #@TestPreamble        none
            #@TestStep            Step 1. Admin Resetting Idle Lockout Interval
                                  set idle-lockout-interval'  to 0 s 
            #@TestStep            Step 2. Admin Disabling Last Login Time 
                                  Attribute last-login-time-attribute to reset
            #@TestStep            Step 3. User Binding SearchObject returns 0
            #@TestStep            Step 4. Sleep sleepForMilliSeconds 60000
            #@TestStep            Step 5. User Binding SearchObject returns 0
            #@TestPostamble       none
            #@TestResult          Success if the 5 steps are PASS
        -->
        
        <testcase name="getTestCaseName('Postamble')">
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
'Security: Last Login: Postamble Step 1. Admin Resetting Idle Lockout Interval'
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'idle-lockout-interval' ,
                    'attributeValue'         : '0 s' }
            </call>
            
            <message>
'%s Postamble Step 2. Admin Disabling Last Login Time Attribute' % msg1
            </message>

            <call function="'modifyPwdPolicy'">
                  { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                    'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                    'propertyName'           : 'Default Password Policy' ,
                    'attributeName'          : 'last-login-time-attribute' ,
                    'modifyType'             : 'reset' }
            </call>
            
            <message>
               'Security: Last Login: Postamble Step 3. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'lastdestroy',
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>
  

            <message>
               'Security: Last Login: Postamble Step 4. Sleep'
            </message>

            <call function="'Sleep'">
              { 'sleepForMilliSeconds'   : 60000 }
            </call>

            
            <message>
               'Security: Last Login: Postamble Step 5. User Binding'
            </message>

            <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=jreuter,%s' % basedn ,
                  'dsInstancePswd'   : 'lastdestroy' ,
                  'dsBaseDN'         : 'dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  ,
                  'extraParams'      : '-s base' }
            </call>

            <call function="'testCase_Postamble'"/>

          </sequence>
        </testcase>

     </sequence>

  </function>

</stax>
